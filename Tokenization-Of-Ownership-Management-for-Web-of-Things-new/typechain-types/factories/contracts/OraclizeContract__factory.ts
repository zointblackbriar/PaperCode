/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  OraclizeContract,
  OraclizeContractInterface,
} from "../../contracts/OraclizeContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkRequested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_payment",
        type: "uint256",
      },
      {
        internalType: "bytes4",
        name: "_callbackFunctionId",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "_expiration",
        type: "uint256",
      },
    ],
    name: "cancelRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "fulfill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestEthereumPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526001600455600880546001600160a01b031916736090149792daaee9d1d568c9f9a6f6b46aa29efd17905561003761004e565b600780546001600160a01b0319163317905561012a565b6100f873c89bd4e1632d3a43cb03aaad5262cbe4038bc5716001600160a01b03166338cc48316040518163ffffffff1660e01b815260040160206040518083038186803b15801561009e57600080fd5b505afa1580156100b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d691906100fa565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b565b60006020828403121561010c57600080fd5b81516001600160a01b038116811461012357600080fd5b9392505050565b611328806101396000396000f3fe6080604052600436106100695760003560e01c80639d1b464a116100435780639d1b464a146100e9578063d7f29c631461010d578063ec65d0f81461012257600080fd5b80634357855e146100755780638da5cb5b146100975780638dc654a2146100d457600080fd5b3661007057005b600080fd5b34801561008157600080fd5b50610095610090366004610f6e565b610142565b005b3480156100a357600080fd5b506007546100b7906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100e057600080fd5b5061009561022c565b3480156100f557600080fd5b506100ff60065481565b6040519081526020016100cb565b34801561011957600080fd5b506100956103c1565b34801561012e57600080fd5b5061009561013d366004610f90565b610581565b60008281526005602052604090205482906001600160a01b031633146101d55760405162461bcd60e51b815260206004820152602860248201527f536f75726365206d75737420626520746865206f7261636c65206f662074686560448201527f207265717565737400000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600081815260056020526040808220805473ffffffffffffffffffffffffffffffffffffffff191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a25060065550565b6007546001600160a01b0316331461024357600080fd5b60006102576002546001600160a01b031690565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529091506001600160a01b0382169063a9059cbb90339083906370a082319060240160206040518083038186803b1580156102bc57600080fd5b505afa1580156102d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f49190610fdc565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561033a57600080fd5b505af115801561034e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103729190610f4c565b6103be5760405162461bcd60e51b815260206004820152601260248201527f556e61626c6520746f207472616e73666572000000000000000000000000000060448201526064016101cc565b50565b6007546001600160a01b031633146103d857600080fd5b600061044261041b6040518060400160405280602081526020017f37646132373032663337666434386535623162396135373135653335303962368152506105aa565b307f4357855e000000000000000000000000000000000000000000000000000000006105c7565b905061049e6040518060400160405280600381526020017f67657400000000000000000000000000000000000000000000000000000000008152506040518060600160405280603f81526020016112b4603f9139839190610658565b61051d6040518060400160405280600481526020017f70617468000000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f5553440000000000000000000000000000000000000000000000000000000000815250836106589092919063ffffffff16565b60408051808201909152600581527f74696d6573000000000000000000000000000000000000000000000000000000602082015261055e908290606461067b565b60085461057d906001600160a01b03168267016345785d8a0000610699565b5050565b6007546001600160a01b0316331461059857600080fd5b6105a48484848461075a565b50505050565b805160009082906105be5750600092915050565b50506020015190565b6106056040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b6106436040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b61064f81868686610852565b95945050505050565b608083015161066790836108ce565b608083015161067690826108ce565b505050565b608083015161068a90836108ce565b608083015161067690826108e5565b6004546000906106aa8160016110ce565b600455835160408086015160808701515191516000937f4042994600000000000000000000000000000000000000000000000000000000936106fb9386938493923092918a91600191602401611042565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152905061075086838684610945565b9695505050505050565b600084815260056020526040808220805473ffffffffffffffffffffffffffffffffffffffff19811690915590516001600160a01b039091169186917fe1fe3afa0f7f761ff0a8b89086790efd5140d2907ebd5b7ff6bfcb5e075fd4c59190a26040517f6ee4d55300000000000000000000000000000000000000000000000000000000815260048101869052602481018590526001600160e01b031984166044820152606481018390526001600160a01b03821690636ee4d55390608401600060405180830381600087803b15801561083357600080fd5b505af1158015610847573d6000803e3d6000fd5b505050505050505050565b6108906040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b6108a08560800151610100610af2565b50508284526001600160a01b03821660208501526001600160e01b031981166040850152835b949350505050565b6108db8260038351610b5d565b6106768282610c6c565b67ffffffffffffffff198112156109005761057d8282610c9a565b67ffffffffffffffff81131561091a5761057d8282610cdc565b6000811261092e5761057d82600083610b5d565b61057d826001610940846000196111f0565b610b5d565b6040516bffffffffffffffffffffffff193060601b1660208201526034810184905260009060540160408051808303601f19018152828252805160209182012060008181526005909252918120805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038a1617905590925082917fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af99190a26002546040517f4000aea00000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690634000aea090610a2e908890879087906004016110a6565b602060405180830381600087803b158015610a4857600080fd5b505af1158015610a5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a809190610f4c565b6108c65760405162461bcd60e51b815260206004820152602360248201527f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f726160448201527f636c65000000000000000000000000000000000000000000000000000000000060648201526084016101cc565b604080518082019091526060815260006020820152610b1260208361127b565b15610b3a57610b2260208361127b565b610b2d906020611264565b610b3790836110ce565b91505b506020808301829052604080518085526000815283019091019052815b92915050565b60178167ffffffffffffffff1611610b82576105a48360e0600585901b168317610cff565b60ff8167ffffffffffffffff1611610bc057610ba9836018611fe0600586901b1617610cff565b506105a48367ffffffffffffffff83166001610d24565b61ffff8167ffffffffffffffff1611610bff57610be8836019611fe0600586901b1617610cff565b506105a48367ffffffffffffffff83166002610d24565b63ffffffff8167ffffffffffffffff1611610c4057610c2983601a611fe0600586901b1617610cff565b506105a48367ffffffffffffffff83166004610d24565b610c5583601b611fe0600586901b1617610cff565b506105a48367ffffffffffffffff83166008610d24565b604080518082019091526060815260006020820152610c9383846000015151848551610d4a565b9392505050565b610ca58260c3610cff565b5061057d82610cb6836000196111f0565b604051602001610cc891815260200190565b604051602081830303815290604052610e34565b610ce78260c2610cff565b5061057d8282604051602001610cc891815260200190565b604080518082019091526060815260006020820152610c938384600001515184610e41565b6040805180820190915260608152600060208201526108c6848560000151518585610e9d565b6040805180820190915260608152600060208201528251821115610d6d57600080fd5b6020850151610d7c83866110ce565b1115610daf57610daf85610d9f87602001518786610d9a91906110ce565b610f1e565b610daa9060026111d1565b610f35565b600080865180518760208301019350808887011115610dce5787860182525b505050602084015b60208410610e0e5780518252610ded6020836110ce565b9150610dfa6020826110ce565b9050610e07602085611264565b9350610dd6565b51815160001960208690036101000a019081169019919091161790525083949350505050565b6108db8260028351610b5d565b60408051808201909152606081526000602082015283602001518310610e7657610e768485602001516002610daa91906111d1565b835180516020858301018481535080851415610e93576001810182525b5093949350505050565b6040805180820190915260608152600060208201526020850151610ec185846110ce565b1115610ed557610ed585610d9f86856110ce565b60006001610ee584610100611129565b610eef9190611264565b9050855183868201018583198251161781525080518487011115610f135783860181525b509495945050505050565b600081831115610f2f575081610b57565b50919050565b8151610f418383610af2565b506105a48382610c6c565b600060208284031215610f5e57600080fd5b81518015158114610c9357600080fd5b60008060408385031215610f8157600080fd5b50508035926020909101359150565b60008060008060808587031215610fa657600080fd5b843593506020850135925060408501356001600160e01b031981168114610fcc57600080fd5b9396929550929360600135925050565b600060208284031215610fee57600080fd5b5051919050565b6000815180845260005b8181101561101b57602081850181015186830182015201610fff565b8181111561102d576000602083870101525b50601f01601f19169290920160200192915050565b60006101006001600160a01b03808c1684528a60208501528960408501528089166060850152506001600160e01b0319871660808401528560a08401528460c08401528060e084015261109781840185610ff5565b9b9a5050505050505050505050565b6001600160a01b038416815282602082015260606040820152600061064f6060830184610ff5565b600082198211156110e1576110e161129d565b500190565b600181815b808511156111215781600019048211156111075761110761129d565b8085161561111457918102915b93841c93908002906110eb565b509250929050565b6000610c93838360008261113f57506001610b57565b8161114c57506000610b57565b8160018114611162576002811461116c57611188565b6001915050610b57565b60ff84111561117d5761117d61129d565b50506001821b610b57565b5060208310610133831016604e8410600b84101617156111ab575081810a610b57565b6111b583836110e6565b80600019048211156111c9576111c961129d565b029392505050565b60008160001904831182151516156111eb576111eb61129d565b500290565b6000808312837f80000000000000000000000000000000000000000000000000000000000000000183128115161561122a5761122a61129d565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01831381161561125e5761125e61129d565b50500390565b6000828210156112765761127661129d565b500390565b60008261129857634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fdfe68747470733a2f2f6d696e2d6170692e63727970746f636f6d706172652e636f6d2f646174612f70726963653f6673796d3d455448267473796d733d555344a2646970667358221220481e2caa6d3cb959bd439a6bc1757351cece4671955b9106efbc8a0e30d955b764736f6c63430008070033";

type OraclizeContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OraclizeContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OraclizeContract__factory extends ContractFactory {
  constructor(...args: OraclizeContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<OraclizeContract> {
    return super.deploy(overrides || {}) as Promise<OraclizeContract>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OraclizeContract {
    return super.attach(address) as OraclizeContract;
  }
  override connect(signer: Signer): OraclizeContract__factory {
    return super.connect(signer) as OraclizeContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OraclizeContractInterface {
    return new utils.Interface(_abi) as OraclizeContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OraclizeContract {
    return new Contract(address, _abi, signerOrProvider) as OraclizeContract;
  }
}
