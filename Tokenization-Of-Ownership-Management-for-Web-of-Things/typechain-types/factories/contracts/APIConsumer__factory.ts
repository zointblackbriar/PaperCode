/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  APIConsumer,
  APIConsumerInterface,
} from "../../contracts/APIConsumer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "volume",
        type: "uint256",
      },
    ],
    name: "DataFullfilled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_volume",
        type: "uint256",
      },
    ],
    name: "fulfill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestVolumeData",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "volume",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405260016004557f779877a7b0d9e8603169ddbd7836e478b462478900000000000000000000000060805234801561003957600080fd5b50600280546001600160a01b03191673779877a7b0d9e8603169ddbd7836e478b4624789179055600380546001600160a01b031916736090149792daaee9d1d568c9f9a6f6b46aa29efd1790557f37646132373032663337666434386535623162396135373135653335303962366007556100bd670de0b6b3a764000060016100c5565b6008556100f2565b60008160001904831182151516156100ed57634e487b7160e01b600052601160045260246000fd5b500290565b60805160601c610f7961011060003960006102ea0152610f796000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634357855e146100515780636021abac146100665780638dc654a214610064578063c618a1e414610080575b600080fd5b61006461005f366004610c02565b610089565b005b61006e6101a9565b60405190815260200160405180910390f35b61006e60065481565b60008281526005602052604090205482906001600160a01b0316331461011c5760405162461bcd60e51b815260206004820152602860248201527f536f75726365206d75737420626520746865206f7261636c65206f662074686560448201527f207265717565737400000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600081815260056020526040808220805473ffffffffffffffffffffffffffffffffffffffff191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a260068290556040518281527f221d507243adddffe789060be0e69bff4be830996c6b265bfda5083d86f886329060200160405180910390a1505050565b6000806101c060075430634357855e60e01b610319565b905061021c6040518060400160405280600381526020017f6765740000000000000000000000000000000000000000000000000000000000815250604051806080016040528060498152602001610efb604991398391906103aa565b61029b6040518060400160405280600481526020017f70617468000000000000000000000000000000000000000000000000000000008152506040518060400160405280601881526020017f5241572c4554482c5553442c564f4c554d453234484f55520000000000000000815250836103aa9092919063ffffffff16565b60408051808201909152600581527f74696d65730000000000000000000000000000000000000000000000000000006020820152670de0b6b3a7640000906102e5908390836103cd565b6103127f0000000000000000000000000000000000000000000000000000000000000000836008546103eb565b9250505090565b6103576040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b6103956040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b6103a1818686866104c4565b95945050505050565b60808301516103b99083610558565b60808301516103c89082610558565b505050565b60808301516103dc9083610558565b60808301516103c8908261056f565b6004546000906103fc816001610d15565b600455835160408086015160808701515191516000937f40429946000000000000000000000000000000000000000000000000000000009361044d9386938493923092918a91600191602401610c71565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915290506104ba868386846105d3565b9695505050505050565b6105026040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b6105128560800151610100610780565b50508284526001600160a01b03821660208501527fffffffff0000000000000000000000000000000000000000000000000000000081166040850152835b949350505050565b61056582600383516107eb565b6103c88282610900565b67ffffffffffffffff1981121561058e5761058a828261092e565b5050565b67ffffffffffffffff8113156105a85761058a8282610970565b600081126105bc5761058a826000836107eb565b61058a8260016105ce84600019610e37565b6107eb565b6040516bffffffffffffffffffffffff193060601b1660208201526034810184905260009060540160408051808303601f19018152828252805160209182012060008181526005909252918120805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038a1617905590925082917fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af99190a26002546040517f4000aea00000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690634000aea0906106bc90889087908790600401610ced565b602060405180830381600087803b1580156106d657600080fd5b505af11580156106ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070e9190610be0565b6105505760405162461bcd60e51b815260206004820152602360248201527f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f726160448201527f636c6500000000000000000000000000000000000000000000000000000000006064820152608401610113565b6040805180820190915260608152600060208201526107a0602083610ec2565b156107c8576107b0602083610ec2565b6107bb906020610eab565b6107c59083610d15565b91505b506020808301829052604080518085526000815283019091019052815b92915050565b60178167ffffffffffffffff1611610816576108108360e0600585901b168317610993565b50505050565b60ff8167ffffffffffffffff16116108545761083d836018611fe0600586901b1617610993565b506108108367ffffffffffffffff831660016109b8565b61ffff8167ffffffffffffffff16116108935761087c836019611fe0600586901b1617610993565b506108108367ffffffffffffffff831660026109b8565b63ffffffff8167ffffffffffffffff16116108d4576108bd83601a611fe0600586901b1617610993565b506108108367ffffffffffffffff831660046109b8565b6108e983601b611fe0600586901b1617610993565b506108108367ffffffffffffffff831660086109b8565b604080518082019091526060815260006020820152610927838460000151518485516109de565b9392505050565b6109398260c3610993565b5061058a8261094a83600019610e37565b60405160200161095c91815260200190565b604051602081830303815290604052610ac8565b61097b8260c2610993565b5061058a828260405160200161095c91815260200190565b6040805180820190915260608152600060208201526109278384600001515184610ad5565b604080518082019091526060815260006020820152610550848560000151518585610b31565b6040805180820190915260608152600060208201528251821115610a0157600080fd5b6020850151610a108386610d15565b1115610a4357610a4385610a3387602001518786610a2e9190610d15565b610bb2565b610a3e906002610e18565b610bc9565b600080865180518760208301019350808887011115610a625787860182525b505050602084015b60208410610aa25780518252610a81602083610d15565b9150610a8e602082610d15565b9050610a9b602085610eab565b9350610a6a565b51815160001960208690036101000a019081169019919091161790525083949350505050565b61056582600283516107eb565b60408051808201909152606081526000602082015283602001518310610b0a57610b0a8485602001516002610a3e9190610e18565b835180516020858301018481535080851415610b27576001810182525b5093949350505050565b6040805180820190915260608152600060208201526020850151610b558584610d15565b1115610b6957610b6985610a338685610d15565b60006001610b7984610100610d70565b610b839190610eab565b9050855183868201018583198251161781525080518487011115610ba75783860181525b509495945050505050565b600081831115610bc35750816107e5565b50919050565b8151610bd58383610780565b506108108382610900565b600060208284031215610bf257600080fd5b8151801515811461092757600080fd5b60008060408385031215610c1557600080fd5b50508035926020909101359150565b6000815180845260005b81811015610c4a57602081850181015186830182015201610c2e565b81811115610c5c576000602083870101525b50601f01601f19169290920160200192915050565b60006101006001600160a01b03808c1684528a60208501528960408501528089166060850152507fffffffff00000000000000000000000000000000000000000000000000000000871660808401528560a08401528460c08401528060e0840152610cde81840185610c24565b9b9a5050505050505050505050565b6001600160a01b03841681528260208201526060604082015260006103a16060830184610c24565b60008219821115610d2857610d28610ee4565b500190565b600181815b80851115610d68578160001904821115610d4e57610d4e610ee4565b80851615610d5b57918102915b93841c9390800290610d32565b509250929050565b60006109278383600082610d86575060016107e5565b81610d93575060006107e5565b8160018114610da95760028114610db357610dcf565b60019150506107e5565b60ff841115610dc457610dc4610ee4565b50506001821b6107e5565b5060208310610133831016604e8410600b8410161715610df2575081810a6107e5565b610dfc8383610d2d565b8060001904821115610e1057610e10610ee4565b029392505050565b6000816000190483118215151615610e3257610e32610ee4565b500290565b6000808312837f800000000000000000000000000000000000000000000000000000000000000001831281151615610e7157610e71610ee4565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018313811615610ea557610ea5610ee4565b50500390565b600082821015610ebd57610ebd610ee4565b500390565b600082610edf57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fdfe68747470733a2f2f6d696e2d6170692e63727970746f636f6d706172652e636f6d2f646174612f70726963656d756c746966756c6c3f6673796d733d455448267473796d733d555344a2646970667358221220b4584bb3697a42917852fae925a75975645809ad5267cf66106feb3f0d6fe05a64736f6c63430008070033";

type APIConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: APIConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class APIConsumer__factory extends ContractFactory {
  constructor(...args: APIConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<APIConsumer> {
    return super.deploy(overrides || {}) as Promise<APIConsumer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): APIConsumer {
    return super.attach(address) as APIConsumer;
  }
  override connect(signer: Signer): APIConsumer__factory {
    return super.connect(signer) as APIConsumer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): APIConsumerInterface {
    return new utils.Interface(_abi) as APIConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): APIConsumer {
    return new Contract(address, _abi, signerOrProvider) as APIConsumer;
  }
}
