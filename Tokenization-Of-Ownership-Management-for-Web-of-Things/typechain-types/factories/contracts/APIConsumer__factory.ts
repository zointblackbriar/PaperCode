/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  APIConsumer,
  APIConsumerInterface,
} from "../../contracts/APIConsumer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_jobId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_link",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "volume",
        type: "uint256",
      },
    ],
    name: "DataFullfilled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_volume",
        type: "uint256",
      },
    ],
    name: "fulfill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestVolumeData",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "volume",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405260016004553480156200001657600080fd5b50604051620011d3380380620011d3833981016040819052620000399162000187565b6001600160a01b03811662000058576200005262000094565b62000074565b600280546001600160a01b0319166001600160a01b0383161790555b5060609290921b6001600160601b03191660805260a05260c052620001d2565b6200014373c89bd4e1632d3a43cb03aaad5262cbe4038bc5716001600160a01b03166338cc48316040518163ffffffff1660e01b815260040160206040518083038186803b158015620000e657600080fd5b505afa158015620000fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000121919062000162565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b565b80516001600160a01b03811681146200015d57600080fd5b919050565b6000602082840312156200017557600080fd5b620001808262000145565b9392505050565b600080600080608085870312156200019e57600080fd5b620001a98562000145565b93506020850151925060408501519150620001c76060860162000145565b905092959194509250565b60805160601c60a05160c051610fce620002056000396000610343015260006101b1015260006103210152610fce6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634357855e146100515780636021abac146100665780638dc654a214610064578063c618a1e414610080575b600080fd5b61006461005f366004610c57565b610089565b005b61006e6101a9565b60405190815260200160405180910390f35b61006e60065481565b60008281526005602052604090205482906001600160a01b0316331461011c5760405162461bcd60e51b815260206004820152602860248201527f536f75726365206d75737420626520746865206f7261636c65206f662074686560448201527f207265717565737400000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600081815260056020526040808220805473ffffffffffffffffffffffffffffffffffffffff191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a260068290556040518281527f221d507243adddffe789060be0e69bff4be830996c6b265bfda5083d86f886329060200160405180910390a1505050565b6000806101f77f0000000000000000000000000000000000000000000000000000000000000000307f4357855e0000000000000000000000000000000000000000000000000000000061036e565b90506102536040518060400160405280600381526020017f6765740000000000000000000000000000000000000000000000000000000000815250604051806080016040528060498152602001610f50604991398391906103ff565b6102d26040518060400160405280600481526020017f70617468000000000000000000000000000000000000000000000000000000008152506040518060400160405280601881526020017f5241572c4554482c5553442c564f4c554d453234484f55520000000000000000815250836103ff9092919063ffffffff16565b60408051808201909152600581527f74696d65730000000000000000000000000000000000000000000000000000006020820152670de0b6b3a76400009061031c90839083610422565b6103677f0000000000000000000000000000000000000000000000000000000000000000837f0000000000000000000000000000000000000000000000000000000000000000610440565b9250505090565b6103ac6040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b6103ea6040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b6103f681868686610519565b95945050505050565b608083015161040e90836105ad565b608083015161041d90826105ad565b505050565b608083015161043190836105ad565b608083015161041d90826105c4565b600454600090610451816001610d6a565b600455835160408086015160808701515191516000937f4042994600000000000000000000000000000000000000000000000000000000936104a29386938493923092918a91600191602401610cc6565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152905061050f86838684610628565b9695505050505050565b6105576040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b61056785608001516101006107d5565b50508284526001600160a01b03821660208501527fffffffff0000000000000000000000000000000000000000000000000000000081166040850152835b949350505050565b6105ba8260038351610840565b61041d8282610955565b67ffffffffffffffff198112156105e3576105df8282610983565b5050565b67ffffffffffffffff8113156105fd576105df82826109c5565b60008112610611576105df82600083610840565b6105df82600161062384600019610e8c565b610840565b6040516bffffffffffffffffffffffff193060601b1660208201526034810184905260009060540160408051808303601f19018152828252805160209182012060008181526005909252918120805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038a1617905590925082917fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af99190a26002546040517f4000aea00000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690634000aea09061071190889087908790600401610d42565b602060405180830381600087803b15801561072b57600080fd5b505af115801561073f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107639190610c35565b6105a55760405162461bcd60e51b815260206004820152602360248201527f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f726160448201527f636c6500000000000000000000000000000000000000000000000000000000006064820152608401610113565b6040805180820190915260608152600060208201526107f5602083610f17565b1561081d57610805602083610f17565b610810906020610f00565b61081a9083610d6a565b91505b506020808301829052604080518085526000815283019091019052815b92915050565b60178167ffffffffffffffff161161086b576108658360e0600585901b1683176109e8565b50505050565b60ff8167ffffffffffffffff16116108a957610892836018611fe0600586901b16176109e8565b506108658367ffffffffffffffff83166001610a0d565b61ffff8167ffffffffffffffff16116108e8576108d1836019611fe0600586901b16176109e8565b506108658367ffffffffffffffff83166002610a0d565b63ffffffff8167ffffffffffffffff16116109295761091283601a611fe0600586901b16176109e8565b506108658367ffffffffffffffff83166004610a0d565b61093e83601b611fe0600586901b16176109e8565b506108658367ffffffffffffffff83166008610a0d565b60408051808201909152606081526000602082015261097c83846000015151848551610a33565b9392505050565b61098e8260c36109e8565b506105df8261099f83600019610e8c565b6040516020016109b191815260200190565b604051602081830303815290604052610b1d565b6109d08260c26109e8565b506105df82826040516020016109b191815260200190565b60408051808201909152606081526000602082015261097c8384600001515184610b2a565b6040805180820190915260608152600060208201526105a5848560000151518585610b86565b6040805180820190915260608152600060208201528251821115610a5657600080fd5b6020850151610a658386610d6a565b1115610a9857610a9885610a8887602001518786610a839190610d6a565b610c07565b610a93906002610e6d565b610c1e565b600080865180518760208301019350808887011115610ab75787860182525b505050602084015b60208410610af75780518252610ad6602083610d6a565b9150610ae3602082610d6a565b9050610af0602085610f00565b9350610abf565b51815160001960208690036101000a019081169019919091161790525083949350505050565b6105ba8260028351610840565b60408051808201909152606081526000602082015283602001518310610b5f57610b5f8485602001516002610a939190610e6d565b835180516020858301018481535080851415610b7c576001810182525b5093949350505050565b6040805180820190915260608152600060208201526020850151610baa8584610d6a565b1115610bbe57610bbe85610a888685610d6a565b60006001610bce84610100610dc5565b610bd89190610f00565b9050855183868201018583198251161781525080518487011115610bfc5783860181525b509495945050505050565b600081831115610c1857508161083a565b50919050565b8151610c2a83836107d5565b506108658382610955565b600060208284031215610c4757600080fd5b8151801515811461097c57600080fd5b60008060408385031215610c6a57600080fd5b50508035926020909101359150565b6000815180845260005b81811015610c9f57602081850181015186830182015201610c83565b81811115610cb1576000602083870101525b50601f01601f19169290920160200192915050565b60006101006001600160a01b03808c1684528a60208501528960408501528089166060850152507fffffffff00000000000000000000000000000000000000000000000000000000871660808401528560a08401528460c08401528060e0840152610d3381840185610c79565b9b9a5050505050505050505050565b6001600160a01b03841681528260208201526060604082015260006103f66060830184610c79565b60008219821115610d7d57610d7d610f39565b500190565b600181815b80851115610dbd578160001904821115610da357610da3610f39565b80851615610db057918102915b93841c9390800290610d87565b509250929050565b600061097c8383600082610ddb5750600161083a565b81610de85750600061083a565b8160018114610dfe5760028114610e0857610e24565b600191505061083a565b60ff841115610e1957610e19610f39565b50506001821b61083a565b5060208310610133831016604e8410600b8410161715610e47575081810a61083a565b610e518383610d82565b8060001904821115610e6557610e65610f39565b029392505050565b6000816000190483118215151615610e8757610e87610f39565b500290565b6000808312837f800000000000000000000000000000000000000000000000000000000000000001831281151615610ec657610ec6610f39565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018313811615610efa57610efa610f39565b50500390565b600082821015610f1257610f12610f39565b500390565b600082610f3457634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fdfe68747470733a2f2f6d696e2d6170692e63727970746f636f6d706172652e636f6d2f646174612f70726963656d756c746966756c6c3f6673796d733d455448267473796d733d555344a2646970667358221220a5c83c17455a47c2b994ff735a9e4e5ab4ad3a9e7936e603af0a7509666bcf0264736f6c63430008070033";

type APIConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: APIConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class APIConsumer__factory extends ContractFactory {
  constructor(...args: APIConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _oracle: PromiseOrValue<string>,
    _jobId: PromiseOrValue<BytesLike>,
    _fee: PromiseOrValue<BigNumberish>,
    _link: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<APIConsumer> {
    return super.deploy(
      _oracle,
      _jobId,
      _fee,
      _link,
      overrides || {}
    ) as Promise<APIConsumer>;
  }
  override getDeployTransaction(
    _oracle: PromiseOrValue<string>,
    _jobId: PromiseOrValue<BytesLike>,
    _fee: PromiseOrValue<BigNumberish>,
    _link: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _oracle,
      _jobId,
      _fee,
      _link,
      overrides || {}
    );
  }
  override attach(address: string): APIConsumer {
    return super.attach(address) as APIConsumer;
  }
  override connect(signer: Signer): APIConsumer__factory {
    return super.connect(signer) as APIConsumer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): APIConsumerInterface {
    return new utils.Interface(_abi) as APIConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): APIConsumer {
    return new Contract(address, _abi, signerOrProvider) as APIConsumer;
  }
}
