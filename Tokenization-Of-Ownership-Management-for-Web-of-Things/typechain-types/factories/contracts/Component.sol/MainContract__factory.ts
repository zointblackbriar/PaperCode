/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MainContract,
  MainContractInterface,
} from "../../../contracts/Component.sol/MainContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "helperAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "bar",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101d23803806101d283398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61013f806100936000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063febb0f7e14610030575b600080fd5b61003861004a565b60405190815260200160405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c29855786040518163ffffffff1660e01b815260040160206040518083038186803b1580156100b357600080fd5b505afa1580156100c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100eb91906100f0565b905090565b60006020828403121561010257600080fd5b505191905056fea2646970667358221220431515cece8ca41d1cd5a3a5a6bc12e4c0964ff100261a619c277f489f7d728a64736f6c63430008070033";

type MainContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MainContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MainContract__factory extends ContractFactory {
  constructor(...args: MainContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    helperAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MainContract> {
    return super.deploy(
      helperAddress,
      overrides || {}
    ) as Promise<MainContract>;
  }
  override getDeployTransaction(
    helperAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(helperAddress, overrides || {});
  }
  override attach(address: string): MainContract {
    return super.attach(address) as MainContract;
  }
  override connect(signer: Signer): MainContract__factory {
    return super.connect(signer) as MainContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MainContractInterface {
    return new utils.Interface(_abi) as MainContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MainContract {
    return new Contract(address, _abi, signerOrProvider) as MainContract;
  }
}
