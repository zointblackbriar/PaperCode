/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPicker,
  IPickerInterface,
} from "../../../../../contracts/MediatorPattern/NonAdminRoles/mPicker.sol/IPicker";

const _abi = [
  {
    inputs: [],
    name: "getStorageLocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "Asset_id",
        type: "uint256",
      },
    ],
    name: "inventoryDelivered",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "Asset_id",
        type: "uint256",
      },
    ],
    name: "packInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "Asset_id",
        type: "uint256",
      },
    ],
    name: "pickInventory",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "contract Issuer",
        name: "issuer",
        type: "address",
      },
      {
        internalType: "contract Verifier",
        name: "verifier",
        type: "address",
      },
    ],
    name: "updateInventoryRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "Asset_id",
        type: "uint256",
      },
      {
        internalType: "contract Issuer",
        name: "issuer",
        type: "address",
      },
      {
        internalType: "contract Verifier",
        name: "verifier",
        type: "address",
      },
    ],
    name: "updateStorageReport",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IPicker__factory {
  static readonly abi = _abi;
  static createInterface(): IPickerInterface {
    return new utils.Interface(_abi) as IPickerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPicker {
    return new Contract(address, _abi, signerOrProvider) as IPicker;
  }
}
