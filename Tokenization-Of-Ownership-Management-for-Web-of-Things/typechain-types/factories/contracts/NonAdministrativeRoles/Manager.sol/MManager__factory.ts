/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MManager,
  MManagerInterface,
} from "../../../../contracts/NonAdministrativeRoles/Manager.sol/MManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IComponent",
        name: "e",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "contract ComponentRole",
        name: "componentrole",
        type: "address",
      },
    ],
    name: "addRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "core",
    outputs: [
      {
        internalType: "contract IComponent",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAge",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractAddressEmployeeRole",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "contract ComponentRole",
        name: "componentrole",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "job",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107a93803806107a983398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610716806100936000396000f3fe60806040526004361061007b5760003560e01c806394cfcb561161004e57806394cfcb561461009e578063967e6e651461013b57806396fbc17014610151578063f2f4eb261461017157600080fd5b806317d7de7c1461008057806332a2c5d01461009e578063526915af146100c557806358e7ec3c146100f5575b600080fd5b610088610191565b604051610095919061062b565b60405180910390f35b3480156100aa57600080fd5b50305b6040516001600160a01b039091168152602001610095565b3480156100d157600080fd5b506100e56100e03660046104d7565b610230565b6040519015158152602001610095565b34801561010157600080fd5b5060408051808201909152601081527f4d616e6167652057617265686f757365000000000000000000000000000000006020820152610088565b6101436102da565b604051908152602001610095565b34801561015d57600080fd5b506100e561016c3660046104d7565b610363565b34801561017d57600080fd5b506000546100ad906001600160a01b031681565b60008054604080517f17d7de7c00000000000000000000000000000000000000000000000000000000815290516060936001600160a01b03909316926317d7de7c926004808201939182900301818387803b1580156101ef57600080fd5b505af1158015610203573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261022b9190810190610539565b905090565b600080546040517f526915af0000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015284811660248301529091169063526915af90604401602060405180830381600087803b15801561029957600080fd5b505af11580156102ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d19190610510565b90505b92915050565b60008060009054906101000a90046001600160a01b03166001600160a01b031663967e6e656040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561032b57600080fd5b505af115801561033f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022b91906105e6565b600080546040517f96fbc1700000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301528481166024830152909116906396fbc17090604401602060405180830381600087803b1580156103cc57600080fd5b505af11580156103e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104049190610510565b506102d46040518060400160405280602081526020017f6163636f756e74206f662074686520456d706c6f796565526f6c6520726f6c65815250846104b2828260405160240161045592919061063e565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f319af333000000000000000000000000000000000000000000000000000000001790526104b6565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600080604083850312156104ea57600080fd5b82356104f5816106c8565b91506020830135610505816106c8565b809150509250929050565b60006020828403121561052257600080fd5b8151801515811461053257600080fd5b9392505050565b60006020828403121561054b57600080fd5b815167ffffffffffffffff8082111561056357600080fd5b818401915084601f83011261057757600080fd5b81518181111561058957610589610699565b604051601f8201601f19908116603f011681019083821181831017156105b1576105b1610699565b816040528281528760208487010111156105ca57600080fd5b6105db836020830160208801610669565b979650505050505050565b6000602082840312156105f857600080fd5b5051919050565b60008151808452610617816020860160208601610669565b601f01601f19169290920160200192915050565b6020815260006102d160208301846105ff565b60408152600061065160408301856105ff565b90506001600160a01b03831660208301529392505050565b60005b8381101561068457818101518382015260200161066c565b83811115610693576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6001600160a01b03811681146106dd57600080fd5b5056fea26469706673582212208688cf4f86142b3f69269e47e25ca001cc037a065385675dc6bc0055a917555c64736f6c63430008070033";

type MManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MManager__factory extends ContractFactory {
  constructor(...args: MManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    e: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MManager> {
    return super.deploy(e, overrides || {}) as Promise<MManager>;
  }
  override getDeployTransaction(
    e: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(e, overrides || {});
  }
  override attach(address: string): MManager {
    return super.attach(address) as MManager;
  }
  override connect(signer: Signer): MManager__factory {
    return super.connect(signer) as MManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MManagerInterface {
    return new utils.Interface(_abi) as MManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MManager {
    return new Contract(address, _abi, signerOrProvider) as MManager;
  }
}
